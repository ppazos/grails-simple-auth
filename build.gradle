buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.4.4"
group "grails.simple.auth"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"war"

repositories {
   mavenLocal()
   maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
   compile "org.springframework.boot:spring-boot-starter-logging"
   compile "org.springframework.boot:spring-boot-autoconfigure"
   compile "org.grails:grails-core"
   console "org.grails:grails-console"
   profile "org.grails.profiles:plugin"
   provided "org.grails:grails-plugin-services"
   provided "org.grails:grails-plugin-domain-class"
   testCompile "org.grails:grails-gorm-testing-support"
   testCompile "org.grails:grails-plugin-testing"
   testCompile "org.grails:grails-web-testing-support"

//testCompile "org.springframework.org:spring-boot-starter-tomcat"
//    testCompile "org.springframework:spring-webmvc"
//    testCompile "org.springframework:spring-web"
//    testCompile "org.springframework:spring-test"

//provided group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
   testCompile fileTree(dir: 'lib', include: '*.jar')

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'ppazos/grails-simple-auth'
    license {
        name = 'Apache-2.0'
    }
    title = "grails-simple-auth"
    desc = "Simple authentication"
    developers = [johndoe:"Pablo Pazos"]
}
